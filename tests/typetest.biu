(extern + (-> Int Int Int))
(extern - (-> Int Int Int))
(extern * (-> Int Int Int))
(extern / (-> Int Int Int))
(extern == (-> Int Int Bool))

(define (square (x Int))
  (* x x))

(square 5)

(define (transform 
          (x Int) 
          (f (-> Int Int)))
  (f x))

(define ((fact Int) (n Int))
  (if (== n 0)
    0
    (* n (fact (- n 1)))))

(define y (transform 5 square))
