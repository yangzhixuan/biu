(extern + (-> Number Number Number))
(extern - (-> Number Number Number))
(extern * (-> Number Number Number))
(extern / (-> Number Number Number))
(extern == (-> Number Number Bool))

(define (square (x Number))
  (* x x))

(square 5)

(define (transform
          (x Number)
          (f (-> Number Number)))
  (f x))

(define ((fact Number) (n Number))
  (if (== n 0)
    0
    (* n (fact (- n 1)))))

(define y (transform 5 square))
